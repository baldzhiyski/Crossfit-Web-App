spring:
  cache:
    type: simple  # Use a simple cache implementation for tests
  datasource:
    url: jdbc:hsqldb:mem:crossfit_app;sql.syntax_mys=true
    driver-class-name: org.hsqldb.jdbcDriver
    username: test
    password: test
  jpa:
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: test
            client-secret: test
remember_me_key: topseccc


logging:
  level:
    org:
      hibernate:
        type:
          descriptor: TRACE
        SQL: DEBUG
      nodeValue: WARN
    blog: WARN

forex:
  api:
    url: "https://dummy/api{app_id}"
    key: dummy
    base: "USD"

countries:
  api:
    url: "https://dummy/second"
    init-exchange-rates: false


mail:
  crossfit: "crossfit-stuttgart@gmail.com"
  host: localhost
  port: 5655
  username: dummy
  password: dummy

workouts:
    api:
      allTrainingsUrl: "http://sometest"
      baseUrl: "http://sometest-second"

crossfit:
  api:
    mostRecentEvents: "http://testing"
    publishUrl: "http://testing/publish"
    byIdUrl: "http://testing/find/{id}"
    allEvents: "http://testing/all"
    init-crossfit-events: false

cloudinary :
  cloud_name : "somename"
  apiKey: "testkey"
  apiSecret : "testsecret"

google.recaptcha:
  site: test
  secret: test
rest:
  configuration: test
